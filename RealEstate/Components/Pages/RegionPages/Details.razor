@page "/regions/details"
@using Microsoft.EntityFrameworkCore
@using RealEstate.Domain
@inject IDbContextFactory<RealEstate.Data.RealEstateContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Region</h2>
    <hr />
    @if (region is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">RegionName</dt>
            <dd class="col-sm-10">@region.RegionName</dd>
            <dt class="col-sm-2">RegionDescription</dt>
            <dd class="col-sm-10">@region.RegionDescription</dd>
        </dl>
        <div>
            <a href="@($"/regions/edit?regionid={region.RegionId}")">Edit</a> |
            <a href="@($"/regions")">Back to List</a>
        </div>
    }
</div>

@code {
    private Region? region;

    [SupplyParameterFromQuery]
    private int RegionId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        region = await context.Region.FirstOrDefaultAsync(m => m.RegionId == RegionId);

        if (region is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}

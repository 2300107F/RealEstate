@page "/inquiries/delete"
@using Microsoft.EntityFrameworkCore
@using RealEstate.Domain
@inject IDbContextFactory<RealEstate.Data.RealEstateContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Inquiry</h2>
    <hr />
    @if (inquiry is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">DateOfInquiry</dt>
            <dd class="col-sm-10">@inquiry.DateOfInquiry</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Message</dt>
            <dd class="col-sm-10">@inquiry.Message</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@inquiry.Status</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@inquiry.UserId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PropertyId</dt>
            <dd class="col-sm-10">@inquiry.PropertyId</dd>
        </dl>
        <EditForm method="post" Model="inquiry" OnValidSubmit="DeleteInquiry" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(inquiry is null)">Delete</button> |
            <a href="/inquiries">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Inquiry? inquiry;

    [SupplyParameterFromQuery]
    private int InquiryId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        inquiry = await context.Inquiry.FirstOrDefaultAsync(m => m.InquiryId == InquiryId);

        if (inquiry is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteInquiry()
    {
        using var context = DbFactory.CreateDbContext();
        context.Inquiry.Remove(inquiry!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/inquiries");
    }
}
